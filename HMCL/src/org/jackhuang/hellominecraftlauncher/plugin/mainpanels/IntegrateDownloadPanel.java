/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jackhuang.hellominecraftlauncher.plugin.mainpanels;

import com.google.gson.Gson;
import javax.swing.table.DefaultTableModel;
import org.jackhuang.hellominecraftlauncher.apis.DoingLongTaskDialog;
import org.jackhuang.hellominecraftlauncher.apis.DoneListener;
import org.jackhuang.hellominecraftlauncher.apis.DownloadWindow;
import org.jackhuang.hellominecraftlauncher.apis.utils.Compressor;
import org.jackhuang.hellominecraftlauncher.apis.utils.Utils;
import org.jackhuang.hellominecraftlauncher.download.URLGetThread;
import org.jackhuang.hellominecraftlauncher.loaders.packages.Packages;
import org.jackhuang.hellominecraftlauncher.plugin.HMCLPlugin;
import org.jackhuang.hellominecraftlauncher.utilities.C;

/**
 *
 * @author hyh
 */
public class IntegrateDownloadPanel extends javax.swing.JPanel implements DoneListener<String, Object> {

    /**
     * Creates new form IntegrateDownloadPanel
     */
    public IntegrateDownloadPanel() {
        initComponents();
        
        setName(C.I18N.getString("IntegrateDownload"));
        String[] titleA = new String[]{C.I18N.getString("IntegrateName"), C.I18N.getString("IntegrateVersion"), C.I18N.getString("Version"), C.I18N.getString("Authors")};
        Class[] typesA = new Class[]{String.class, String.class, String.class, String.class};
        boolean[] canEditA = new boolean[]{false,false,false,false};
        lstDownloads.setModel(Utils.makeDefaultTableModel(titleA, typesA, canEditA));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        lstDownloads = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnDownload = new javax.swing.JButton();

        lstDownloads.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "整合包名称", "整合包版本", "MC版本", "作者"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lstDownloads.setToolTipText("");
        lstDownloads.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstDownloads);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jackhuang/hellominecraftlauncher/I18N"); // NOI18N
        btnRefresh.setText(bundle.getString("刷新")); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnDownload.setText(bundle.getString("下载")); // NOI18N
        btnDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDownload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDownload))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        refreshDownloads();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadActionPerformed
        downloadMinecraft();
    }//GEN-LAST:event_btnDownloadActionPerformed

    private void refreshDownloads() {
        URLGetThread thread = new URLGetThread(C.URL_INTEGRATE + "packages.json", "utf-8");
        thread.addListener(this);
        thread.start();
    }
    
    private void loadDownloads() {
        DefaultTableModel model = (DefaultTableModel)lstDownloads.getModel();
        while(model.getRowCount() > 0)
            model.removeRow(0);
        for(Packages p : packages) {
            model.addRow(new Object[] {
                p.name, p.version, p.mcversion, p.author
            });
        }
        lstDownloads.updateUI();
    }
    
    private void downloadMinecraft() {
        int index = lstDownloads.getSelectedRow();
        Packages p = packages[index];
        DownloadWindow dw = new DownloadWindow();
        final String filename = p.type + '-' + p.version + ".zip";
        String url = C.URL_INTEGRATE + p.type + '/' + filename;
        dw.addDownloadURL(p.name + ' ' + p.version, url, filename);
        dw.setVisible(true);
        if(dw.isDownloadSuccessfully()) {
            DoingLongTaskDialog dialog = new DoingLongTaskDialog(null, true, new DoneListener<Object, Object>() {

                @Override
                public void onDone(Object value, Object value2) {
                    Compressor.unzip(filename, HMCLPlugin.env.getDefaultGameDir());
                }
            }, null);
            dialog.setVisible(true);
        }
    }
    
    @Override
    public void onDone(String value, Object value2) {
        packages = new Gson().fromJson(value, Packages[].class);
        loadDownloads();
    }
    
    Packages[] packages;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDownload;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable lstDownloads;
    // End of variables declaration//GEN-END:variables
}
