/*
 * Hello Minecraft! Launcher.
 * Copyright (C) 2013  huangyuhui <huanghongxun2008@126.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see {http://www.gnu.org/licenses/}.
 */
package org.jackhuang.hellominecraft.launcher.ui.modpack;

import java.io.File;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import javax.swing.tree.DefaultTreeModel;
import org.jackhuang.hellominecraft.util.func.BiFunction;
import org.jackhuang.hellominecraft.util.system.FileUtils;
import org.jackhuang.hellominecraft.util.ui.checktree.CheckBoxTreeCellRenderer;
import org.jackhuang.hellominecraft.util.ui.checktree.CheckBoxTreeNode;
import org.jackhuang.hellominecraft.util.ui.checktree.CheckBoxTreeNodeSelectionListener;
import org.jackhuang.hellominecraft.util.ui.wizard.spi.WizardController;

/**
 *
 * @author huangyuhui
 */
public class ModpackFileSelectionPanel extends javax.swing.JPanel {

    private final WizardController controller;
    private final Map wizardData;
    private final BiFunction<String, Boolean, Integer> blackList;
    private final Set<String> bannedFiles = new HashSet<>();

    /**
     * Creates new form ModpackFileSelectionPanel
     *
     * @param blackList Return 0: non blocked, 1: non shown, 2: suggested,
     *                  checked
     */
    public ModpackFileSelectionPanel(WizardController controller, Map wizardData, File gameDir, BiFunction<String, Boolean, Integer> blackList) {
        initComponents();

        this.controller = controller;
        this.wizardData = wizardData;
        this.blackList = blackList;

        CheckBoxTreeNode root = create(gameDir, "minecraft");

        jTree1.setModel(new DefaultTreeModel(root));
        jTree1.setCellRenderer(new CheckBoxTreeCellRenderer());
        jTree1.addMouseListener(new CheckBoxTreeNodeSelectionListener());

        wizardData.put("blackList", root);
    }

    CheckBoxTreeNode create(File file, String basePath) {
        int state = 0;
        if (basePath.length() > "minecraft/".length())
            if ((state = blackList.apply(basePath.substring("minecraft/".length()) + (file.isDirectory() ? "/" : ""), file.isDirectory())) == 1)
                return null;
        CheckBoxTreeNode node = new CheckBoxTreeNode(FileUtils.getName(basePath));
        if (state == 2)
            node.setSelected(true);

        if (file.isDirectory()) {
            File[] f = file.listFiles();
            for (File subFile : f) {
                CheckBoxTreeNode subNode = create(subFile, basePath + "/" + subFile.getName());
                if (subNode != null) {
                    subNode.setSelected(subNode.isSelected() | node.isSelected());
                    node.add(subNode);
                }
            }
            if (!node.children().hasMoreElements())
                return null;
        }

        return node;
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
