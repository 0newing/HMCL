/*
 * Hello Minecraft! Launcher.
 * Copyright (C) 2013  huangyuhui <huanghongxun2008@126.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see {http://www.gnu.org/licenses/}.
 */
package org.jackhuang.hellominecraft.launcher.views;

import javax.swing.table.DefaultTableModel;
import org.jackhuang.hellominecraft.utils.C;
import org.jackhuang.hellominecraft.utils.HMCLog;
import org.jackhuang.hellominecraft.utils.MessageBox;
import org.jackhuang.hellominecraft.utils.StrUtils;
import org.jackhuang.hellominecraft.utils.views.SwingUtils;
import rx.concurrency.Schedulers;

/**
 *
 * @author huangyuhui
 */
public class GameDownloadPanel extends AnimatedPanel implements Selectable {

    GameSettingsPanel gsp;

    /**
     * Creates new form GameDownloadPanel
     */
    public GameDownloadPanel(GameSettingsPanel gsp) {
        initComponents();
        this.gsp = gsp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDownload = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstDownloads = new javax.swing.JTable();
        btnRefreshGameDownloads = new javax.swing.JButton();

        btnDownload.setText(C.i18n("ui.button.download")); // NOI18N
        btnDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadActionPerformed(evt);
            }
        });

        lstDownloads.setModel(SwingUtils.makeDefaultTableModel(new String[]{C.I18N.getString("install.version"), C.I18N.getString("install.time"), C.I18N.getString("install.type")},new Class[]{String.class, String.class, String.class}, new boolean[]{false, false, false}));
        lstDownloads.setToolTipText("");
        lstDownloads.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstDownloads);

        btnRefreshGameDownloads.setText(C.i18n("ui.button.refresh")); // NOI18N
        btnRefreshGameDownloads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshGameDownloadsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRefreshGameDownloads, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDownload))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnRefreshGameDownloads)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDownload))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadActionPerformed
        downloadMinecraft();
        gsp.refreshVersions();
    }//GEN-LAST:event_btnDownloadActionPerformed

    private void btnRefreshGameDownloadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshGameDownloadsActionPerformed
        refreshDownloads();
    }//GEN-LAST:event_btnRefreshGameDownloadsActionPerformed

    public void refreshDownloads() {
        DefaultTableModel model = SwingUtils.clearDefaultTable(lstDownloads);
        gsp.getProfile().service().download().getRemoteVersions()
            .observeOn(Schedulers.eventQueue()).subscribeOn(Schedulers.newThread())
            .subscribe((ver) -> model.addRow(new Object[] { ver.id, ver.time,
                                                            StrUtils.equalsOne(ver.type, "old_beta", "old_alpha", "release", "snapshot") ? C.i18n("versions." + ver.type) : ver.type }),
                       (e) -> {
                           MessageBox.Show("Failed to refresh download: " + e.getLocalizedMessage());
                           HMCLog.err("Failed to refresh download.", e);
                       }, lstDownloads::updateUI);
    }

    void downloadMinecraft() {
        if (lstDownloads.getSelectedRow() < 0) {
            MessageBox.Show(C.i18n("gamedownload.not_refreshed"));
            return;
        }
        String id = (String) lstDownloads.getModel().getValueAt(lstDownloads.getSelectedRow(), 0);
        gsp.getProfile().service().download().downloadMinecraft(id);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDownload;
    private javax.swing.JButton btnRefreshGameDownloads;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable lstDownloads;
    // End of variables declaration//GEN-END:variables

    boolean selected = false;

    @Override
    public void onSelected() {
        super.onSelected();
        if (!selected) {
            selected = true;
            refreshDownloads();
        }
    }
}
