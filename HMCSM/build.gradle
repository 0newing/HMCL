/*
 * Copyright 2013 huangyuhui <huanghongxun2008@126.com>
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.
 */
apply plugin: 'launch4j'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.jackhuang.hellominecraft.svrmgr.Main'
}

String mavenGroupId = 'HMCSM'
String mavenVersion = '0.8.6'
String bundleName = "Hello Minecraft! Server Manager"

group = mavenGroupId
version = mavenVersion

String mavenArtifactId = name

buildscript {
    repositories {
        mavenCentral();
        dependencies {
            classpath 'net.sf.proguard:proguard-gradle:4.10'
            classpath 'edu.sc.seis.gradle:launch4j:1.0.6'
        }
    }
}

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId = mavenGroupId
        artifactId = mavenArtifactId
        version = mavenVersion
    }
}

dependencies {
    compile project(":HMCLAPI")
    compile project(":MetroLookAndFeel")
    compile files("../../../../repo/org/ho/jyaml/1.3/jyaml-1.3.jar")
    compile ("org.tukaani:xz:1.5")
    compile ('org.jsoup:jsoup:1.7.2')
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    
    manifest {
        attributes 'Created-By'        : 'Copyright(c) 2014 huangyuhui.',
                   'Main-Class'        : mainClass
    }
}

task proguard(type: proguard.gradle.ProGuardTask, dependsOn: jar) {
    ext {
        injar = jar.archivePath
        jar.classifier = 'proguard'
        outjar = jar.archivePath
        jar.classifier = ''
    }
    
    injars injar
    outjars outjar
    printusage "shrinking_" + version + ".map"
    printmapping "obfuscate_" + version + ".map"
    
    configuration 'proguard.pro'
}
processResources {
    from(sourceSets.main.resources.srcDirs) {
        exclude 'icon.icns'
    }
}

build.dependsOn proguard
